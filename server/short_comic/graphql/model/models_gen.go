// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type CreateShortComic interface {
	IsCreateShortComic()
}

type CreateShortComicChap interface {
	IsCreateShortComicChap()
}

type CreateShortComicChapInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description"`
	ComicID     string  `json:"ComicID"`
}

type CreateShortComicChapInputModel struct {
	Name        string  `json:"name"`
	Description *string `json:"description"`
	CreatedByID string  `json:"CreatedByID"`
	ComicID     string  `json:"ComicID"`
}

func (CreateShortComicChapInputModel) IsCreateShortComicChap() {}

type CreateShortComicInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description"`
	Thumbnail   *bool   `json:"thumbnail"`
}

type CreateShortComicInputModel struct {
	Name        string  `json:"name"`
	Description *string `json:"description"`
	CreatedByID string  `json:"CreatedByID"`
	Thumbnail   *string `json:"thumbnail"`
}

func (CreateShortComicInputModel) IsCreateShortComic() {}

type CreateShortComicResponse struct {
	ShortComic  *ShortComic `json:"ShortComic"`
	UploadToken *string     `json:"UploadToken"`
}

type DeleteResult struct {
	Success bool   `json:"success"`
	ID      string `json:"id"`
}

type ImageResult struct {
	ID  string `json:"ID"`
	URL string `json:"Url"`
}

type ShortComic struct {
	ID          string            `json:"_id" bson:"_id"`
	CreatedAt   time.Time         `json:"createdAt"`
	UpdatedAt   time.Time         `json:"updatedAt"`
	CreatedBy   *User             `json:"CreatedBy"`
	CreatedByID string            `json:"CreatedByID"`
	Name        string            `json:"name"`
	Description *string           `json:"description"`
	ChapIDs     []string          `json:"ChapIDs"`
	Chap        []*ShortComicChap `json:"Chap"`
	Thumbnail   *string           `json:"thumbnail"`
}

func (ShortComic) IsCreateShortComic() {}

type ShortComicChap struct {
	ID          string         `json:"_id" bson:"_id"`
	CreatedAt   time.Time      `json:"createdAt"`
	UpdatedAt   time.Time      `json:"updatedAt"`
	CreatedBy   *User          `json:"CreatedBy"`
	CreatedByID string         `json:"CreatedByID"`
	Name        string         `json:"name"`
	Description *string        `json:"description"`
	ComicID     string         `json:"ComicID"`
	Comic       *ShortComic    `json:"Comic"`
	Images      []*ImageResult `json:"Images"`
}

func (ShortComicChap) IsCreateShortComicChap() {}
func (ShortComicChap) IsEntity()               {}

type UpdateShortComicChapInput struct {
	Name        *string `json:"name"`
	Description *string `json:"description"`
}

type UpdateShortComicInput struct {
	Name        *string `json:"name"`
	Description *string `json:"description"`
	Thumbnail   *bool   `json:"thumbnail"`
}

type UpdateShortComicInputModel struct {
	Name        *string `json:"name"`
	Description *string `json:"description"`
	Thumbnail   *string `json:"thumbnail"`
}

type UpdateShortComicResponse struct {
	ShortComic  *ShortComic `json:"ShortComic"`
	UploadToken *string     `json:"UploadToken"`
}

type User struct {
	ID            string        `json:"_id" bson:"_id"`
	ShortComics   []*ShortComic `json:"ShortComics"`
	ShortComicIDs []*string     `json:"ShortComicIDs"`
}

func (User) IsEntity() {}
