directive @inherits(type: String!) on OBJECT

interface CreateShortComic {
  name: String!
  description: String
  thumbnail: String
}

input CreateShortComicInput {
  name: String!
  description: String
  thumbnail: Upload
}

type CreateShortComicInputModel implements CreateShortComic {
  name: String!
  description: String
  CreatedByID: String!
  thumbnail: String
}

type ShortComic implements CreateShortComic {
  _id: ID!
  createdAt: Time!
  updatedAt: Time!
  CreatedBy: User @goField(forceResolver: true)
  CreatedByID: String!
  name: String!
  description: String
  ChapIDs: [String!]
  Chap: [ShortComicChap!] @goField(forceResolver: true)
  thumbnail: String
}

input UpdateShortComicInput {
  name: String
  description: String
  thumbnail: Upload
}

type DeleteResult {
  success: Boolean!
  id: String!
}

type UpdateShortComicInputModel  {
  name: String
  description: String
  thumbnail: String
}

extend type Mutation {
  createShortComic(input: CreateShortComicInput!): ShortComic!
    @goField(forceResolver: true)
    @auth
  updateShortComic(ShortComicID: String!, input: UpdateShortComicInput!): ShortComic!
    @goField(forceResolver: true)
    @auth
  DeleteShortComic(ShortComicID: String!): DeleteResult!
    @goField(forceResolver: true)
    @auth
}
extend type Query {
  ShortComics: [ShortComic!]! @goField(forceResolver: true)
}
